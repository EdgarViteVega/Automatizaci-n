- name: Implementaciónes en Windows 
  hosts: all
  collections:
    - chocolatey.chocolatey
  tasks:
    - name: Hello Message
      win_ping:
    - name: Instalar paqueteria en el modulo de virtual
      win_chocolatey:
        name:
        - vscode
       # - git
       # - chromium
       # - dropbox
       # - docker-desktop
        state: latest
    - name: Iniciar la búsqueda e instalación de actualizaciones de Windows
      ansible.windows.win_shell: |
        $UpdateSession = New-Object -ComObject Microsoft.Update.Session
        $UpdateSearcher = $UpdateSession.CreateUpdateSearcher()
        $SearchResult = $UpdateSearcher.Search("IsInstalled=0 and Type='Software'")
        $UpdatesToDownload = New-Object -ComObject Microsoft.Update.UpdateColl
        foreach ($Update in $SearchResult.Updates) {
          $UpdatesToDownload.Add($Update) | Out-Null
        }
        $Downloader = $UpdateSession.CreateUpdateDownloader()
        $Downloader.Updates = $UpdatesToDownload
        $Downloader.Download()
        $UpdatesToInstall = New-Object -ComObject Microsoft.Update.UpdateColl
        foreach ($Update in $SearchResult.Updates) {
          if ($Update.IsDownloaded) {
            $UpdatesToInstall.Add($Update) | Out-Null
          }
        }
        $Installer = $UpdateSession.CreateUpdateInstaller()
        $Installer.Updates = $UpdatesToInstall
        $InstallationResult = $Installer.Install()
        # Salida de resultado de la instalación
        $InstallationResult.ResultCode
      register: update_script_result

    - name: Reiniciar si es necesario
      win_reboot:
      when: update_result.reboot_required
    - name: Mostrar ventana emergente de actualización
      win_shell: |
        Add-Type -AssemblyName PresentationFramework
        [System.Windows.MessageBox]::Show('El sistema ha sido actualizado y configurado por el administrador, puede continuar trabajando', 'Actualización Completa')
      when: update_result.changed
      ignore_errors: yes
